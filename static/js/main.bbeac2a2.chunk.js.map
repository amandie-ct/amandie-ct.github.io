{"version":3,"sources":["Wallpaper.js","PokemonMini.js","Pokelist.js","CategoryButton.js","ButtonsBackground.js","Pokedex.js","Stats.js","SinglePokemonImg.js","Characteristics.js","MainInfo.js","SinglePokemon.js","App.js","index.js"],"names":["Wallpaper","className","src","id","alt","PokemonMini","pokemonData","pokeUrl","url","split","length","name","to","icon","faChevronRight","Pokelist","pokemonList","loadMorePokemon","hasMorePokemon","dataLength","next","hasMore","map","pokemon","index","CategoryButton","poketype","catId","fetchByType","onClick","ButtonsBackground","clearCategoryFilter","useState","pokemonType","setPokemonType","useEffect","fetch","then","res","json","data","results","type","Pokedex","setPokemonList","pokemonEndpoint","nextPokemon","setNextPokemon","isPending","setIsPending","getPokemonList","ok","Error","catch","err","console","log","message","typeId","item","Stats","stat","widthPercentage","base_stat","style","width","SinglePokemonImg","pokemonName","imgStr","idAdapter","Characteristics","baseExperience","height","weight","abilities","ability","MainInfo","pokemonNumber","SinglePokemon","setBaseExperience","setHeight","setWeight","setAbilities","useParams","setImg","setPokemonNumber","setPokemonName","stats","setStats","baseUrl","base_experience","sprites","front_default","types","faChevronLeft","class","App","exact","path","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bbeac2a2.chunk.js","sourcesContent":["const Wallpaper = () => {\n\n    return (\n        <div className=\"container\">\n            <header className=\"wallpaper-header\">\n                <img src=\"/logo.png\" id=\"wallpaper-logo\" alt=\"Pokemon logo and background\"></img>\n            </header>\n        </div>\n);\n}\n \nexport default Wallpaper;","\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faChevronRight } from '@fortawesome/free-solid-svg-icons';\nimport { Link } from 'react-router-dom';\n\nconst PokemonMini = ({pokemonData}) => {\n\n    let pokeUrl = pokemonData.url.split('/');\n    let id = pokeUrl[pokeUrl.length-2];\n\n     return (\n        <div className=\"pokemonmini-card\">\n            <img src={`https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/${id}.png`} \n            alt=\"pokemon\" id=\"mini-img\"/>\n            <div className=\"mini-details\">\n                <p id=\"number\">#{id}</p>\n                <p id=\"name\">{pokemonData.name}</p>\n            </div>\n            <button id=\"chevron\"><Link to={`/pokemon/${id}`}><FontAwesomeIcon icon={faChevronRight}/></Link></button>\n        </div>\n    );\n}\n\nexport default PokemonMini;\n","import InfiniteScroll from \"react-infinite-scroll-component\";\nimport PokemonMini from \"./PokemonMini\";\n\nconst Pokelist = ({pokemonList, loadMorePokemon, hasMorePokemon}) => {\n\n\n    return (\n        <InfiniteScroll dataLength={pokemonList.length} next={() => {loadMorePokemon()}} \n            hasMore={hasMorePokemon}>\n\n            <ol className=\"pokelist-lista-pokemons\">\n                {pokemonList.map((pokemon, index) => {\n                    return <PokemonMini pokemonData={pokemon} key={index}/>\n                })}\n            </ol>\n        </InfiniteScroll>\n    );\n}\n \nexport default Pokelist;","\nconst CategoryButton = ({poketype, catId, fetchByType}) => {\n\n    return (\n        <button id=\"category-buttons\" className={poketype.name} onClick={() => { fetchByType && fetchByType(catId) }}>\n            <img alt=\"type icons\" className=\"icon-types\" src={`/assets/${poketype.name}.svg`}/>\n            {poketype.name}\n        </button>\n    );\n}\n \nexport default CategoryButton;","import { useEffect, useState } from \"react\";\nimport CategoryButton from \"./CategoryButton\"\n\nconst ButtonsBackground = ({fetchByType, clearCategoryFilter}) => {\n    const [pokemonType, setPokemonType] = useState(null);\n    \n    useEffect (() => {\n        fetch('https://pokeapi.co/api/v2/type/')\n        .then(res => {\n            return res.json();\n        })\n        .then(data => {\n            setPokemonType(data);\n        })\n    }, []);\n\n  \n    return (\n        <nav id=\"navbar\">\n            <h1>Filter by</h1>\n            <div id=\"buttons-box\">\n                {pokemonType && pokemonType.results.map((type, index) => {\n                    return <CategoryButton poketype={type} key={index} catId={index+1} fetchByType={fetchByType} />\n                })}\n                <button id=\"clear-search-button\" onClick={clearCategoryFilter}>clear</button>\n            </div>\n        </nav>\n    );\n}\n \nexport default ButtonsBackground;","import { useEffect } from \"react\";\nimport Pokelist from \"./Pokelist\";\nimport { useState } from \"react\";\nimport ButtonsBackground from \"./ButtonsBackground\";\n\nconst Pokedex = () => {\n\n    const [pokemonList, setPokemonList] = useState(null);\n    const pokemonEndpoint = 'https://pokeapi.co/api/v2/pokemon/';\n    const [nextPokemon, setNextPokemon] = useState(null);\n    const [isPending, setIsPending] = useState(true);\n\n    // pegar a lista de objetos (pokemons) da API e armazenar numa lista\n    // o set next pokemon é pra utilizar com o scroll infinito\n\n    const getPokemonList = (url) => {\n        fetch(url)\n        .then(res => {\n            if (!res.ok){\n                throw Error('Não foi possível encontrar o conteúdo');\n            }\n            return res.json()\n        })\n        .then(data => {\n            setPokemonList(data.results);\n            setNextPokemon(data.next);\n            setIsPending(false);\n        })\n        .catch(err => {\n            console.log(err.message)\n        })\n    }\n\n    // somente na primeira vez que a página carrega, é feita a requisição pra API e a lista armazenada\n    useEffect(() => {\n        getPokemonList(pokemonEndpoint);\n    }, []);\n\n    // endpoint das categorias de pokemon pŕa colocar nos botões\n    const fetchPokemonListByType = (typeId) => {\n        fetch(`https://pokeapi.co/api/v2/type/${typeId}`)\n            .then(res => {\n                if (!res.ok){\n                    throw Error('Não foi possível encontrar o conteúdo');\n                }\n                return res.json()\n            })\n            .then(data => {\n                setPokemonList(data.pokemon.map((item) => item.pokemon))\n                setIsPending(false);\n                setNextPokemon(null);\n            })\n            .catch(err => {\n                console.log(err.message)\n            });\n    }\n\n    // deselecionar a categoria, e resetar a lista de pokemons exibida na página\n    const clearCategoryFilter = () => {\n        getPokemonList(pokemonEndpoint);\n    }\n\n    // carregar mais pokemons a medida que a página é rolada\n    const loadMorePokemon = () => {\n        if (nextPokemon) {\n            fetch(nextPokemon)\n            .then(res => {\n                if (!res.ok){\n                    throw Error('Não foi possível encontrar o conteúdo');\n                }\n                return res.json()\n                })\n            .then(data => {\n                setPokemonList([...pokemonList, ...data.results])\n                setNextPokemon(data.next)\n            });\n        }\n\n    }\n\n    // enquanto next pokemon não for null, adicionar mais pokemons na página\n    const hasMorePokemon = (nextPokemon !== null);\n\n    return (\n        <div className=\"pokedex-container\">\n            <main className=\"pokedex-main\">\n                <ButtonsBackground clearCategoryFilter={clearCategoryFilter} \n                fetchByType={fetchPokemonListByType}/>\n                \n                {isPending ? <div className=\"spining-pokeball\"><img id=\"loading-icon\" src={\"./assets/pokeball.png\"}/></div> :\n                <Pokelist pokemonList={pokemonList} loadMorePokemon={loadMorePokemon} \n                hasMorePokemon={hasMorePokemon}/>}\n            </main>\n        </div>\n    );\n}\n\nexport default Pokedex;","const Stats = ({stat}) => {\n\n    let widthPercentage = stat.base_stat/2;\n\n    return (\n        <section>\n                <div id=\"stat-name\">\n                    <span>{stat.stat.name}</span>\n                    <span id=\"stat-num\">{stat.base_stat}</span></div>\n                <div id=\"stat-container\">\n                    <div style={{width: `${widthPercentage}%`}}id=\"stat\"></div>\n                </div>\n        </section>\n\n     );\n}\n \nexport default Stats;","const SinglePokemonImg = ({ id, pokemonName }) => {\n    const idAdapter = (id) => {\n        if (id.length === 1) {\n            id = '00' + id;\n        }\n        if (id.length === 2){\n            id = '0' + id;\n        }\n        return id;\n    }\n\n    let imgStr = `https://assets.pokemon.com/assets/cms2/img/pokedex/full/${idAdapter(id)}.png`\n    return (  \n        \n        <img id=\"single-pokemon-img\" src={imgStr} alt={`Pokemon ${pokemonName}`}/>\n)}\n \nexport default SinglePokemonImg;","const Characteristics = ({baseExperience, height, weight, abilities}) => {\n    return (\n        <section className=\"characteristics\">\n            <h3>Characteristics</h3>\n            <p>Base experience:&nbsp;<span>{baseExperience}</span></p>\n            <hr className=\"horizontal-rule\"></hr>\n            <p>Height:&nbsp;<span>{height/10}&nbsp;m</span></p>\n            <hr className=\"horizontal-rule\"></hr>\n            <p>Weight:&nbsp;<span>{weight/10}&nbsp;kg</span></p>\n            <hr className=\"horizontal-rule\"></hr>\n            <p>Abilities:</p>\n                <div className=\"ability-container\">\n                    {abilities && abilities.map((ability) => {\n                        return <div className=\"ability\">{ability.ability.name}</div>\n                    })}\n                </div>\n        </section>\n    );\n}\n \nexport default Characteristics;","const MainInfo = ({pokemonName, pokemonNumber}) => {\n    return (\n        <section className=\"characteristics-main\">\n            <h2>#{pokemonNumber}</h2>\n            <h1 id=\"single-name\">{pokemonName}</h1>\n            {/* <button>Categoria</button> */}\n        </section>\n    );\n}\n \nexport default MainInfo;","import Stats from \"./Stats\";\nimport SinglePokemonImg from \"./SinglePokemonImg\";\nimport Characteristics from \"./Characteristics\";\nimport MainInfo from \"./MainInfo\";\nimport { useParams } from \"react-router\";\nimport { useState } from \"react\";\nimport { useEffect } from \"react\";\nimport { Link } from 'react-router-dom';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faChevronLeft } from '@fortawesome/free-solid-svg-icons';\nimport CategoryButton from \"./CategoryButton\";\n\nconst SinglePokemon = () => {\n\n    const [baseExperience, setBaseExperience] = useState(null);\n    const [height, setHeight] = useState(null);\n    const [weight, setWeight] = useState(null);\n    const [abilities, setAbilities] = useState(null);\n    const { id } = useParams();\n    const [pokemonImg, setImg] = useState(null);\n    const [pokemonNumber, setPokemonNumber] = useState(null);\n    const [pokemonName, setPokemonName] = useState(null);\n    const [stats, setStats] = useState(null);\n    const [pokemonType, setPokemonType] = useState(null);\n\n    let baseUrl = `https://pokeapi.co/api/v2/pokemon/${id}/`;\n\n    const getSinglePokemon = (url) => {\n        fetch(url)\n        .then(res => {\n            if (!res.ok){\n                throw Error('Não foi possível encontrar o conteúdo');\n            }\n            return res.json()\n        })\n        .then(data => {\n            setBaseExperience(data.base_experience);\n            setHeight(data.height);\n            setWeight(data.weight);\n            setImg(data.sprites.front_default);\n            setPokemonName(data.name);\n            setPokemonNumber(data.id);\n            setStats(data.stats);\n            setAbilities(data.abilities);\n            setPokemonType(data.types);\n        })\n        .catch(err => {\n            console.log(err.message)\n        })\n    }\n    \n    useEffect(() => {\n        getSinglePokemon(baseUrl);\n    }, [])\n\n    return (\n        <div className=\"pokedex-container\">\n            <div className=\"single-pokemon-main\">\n                <div className=\"pokedex-single\">\n                    <Link to={\"/\"}><button id=\"back\">\n                        <FontAwesomeIcon icon={faChevronLeft}/>\n                        &nbsp;Back</button>\n                    </Link>\n                    <SinglePokemonImg id={id} pokemonName={pokemonName}/>\n                    <MainInfo pokemonName={pokemonName} pokemonNumber={pokemonNumber}/>\n                    <Characteristics baseExperience={baseExperience} height={height} weight={weight}\n                    abilities={abilities}/>\n                    <div id=\"single-category\">{pokemonType && pokemonType.map((type) => {\n                        return <CategoryButton poketype={type.type}/>\n                    })}\n                    </div>\n                    <div class=\"statistics\">\n                        <h1 id=\"stats-title\">Stats</h1>\n                        {stats && stats.map((stat) => {\n                            return <Stats stat={stat}/>\n                        })}\n                    </div>\n                </div>\n            </div>\n        </div>\n\n    );\n}\n \nexport default SinglePokemon;","import Wallpaper from './Wallpaper';\nimport Pokedex from './Pokedex';\nimport SinglePokemon from './SinglePokemon';\nimport './App.css';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\n\nfunction App() {\n  return (\n    <Router>\n      <Wallpaper/>\n        <Switch>\n          <Route exact path=\"/\">\n            <Pokedex/>\n          </Route>\n          <Route path=\"/pokemon/:id\">\n            <SinglePokemon/>\n          </Route>\n        </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}